services:
  db:
    image: postgres:15
    container_name: task_manager_db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - task_manager_network

  redis:
    image: redis:7-alpine
    container_name: task_manager_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - task_manager_network

  backend:
    build: .
    container_name: task_manager_backend
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - task_manager_network


networks:
  task_manager_network:
    external: true

volumes:
  postgres_data:
  redis_data:
